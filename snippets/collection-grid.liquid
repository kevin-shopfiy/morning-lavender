{% liquid
  assign filter_tree_vertical_style = shop.metafields.bc-sf-filter.settings | split: 'general":' | last | split: 'filterTreeVerticalStyle":"' | last | split: '","' | first | strip
  assign enable_filter_sticky_d = shop.metafields.bc-sf-filter.settings | split: 'general":' | last | split: 'stickyFilterOnDesktop":' | last | split: ',' | first | strip
  assign enable_filter_sticky_m = shop.metafields.bc-sf-filter.settings | split: 'general":' | last | split: 'stickyFilterOnMobile":' | last | split: ',' | first |  split: '}}' | first | strip

  assign enable_filter_tree_button_desktop_v = false
  if filter_tree_vertical_style == 'style-off-canvas' or filter_tree_vertical_style == 'style-expand'
    assign enable_filter_tree_button_desktop_v = true
  endif

  if collection.products
    assign count = collection.products_count
    assign count_label = 'collections.general.items_with_count'
  endif

  if collection.results
    assign count = collection.results_count
    assign count_label = 'general.search.result_count'
  endif

  assign filters = collection.filters
  assign sort_by = collection.sort_by
  assign default_sort_by = collection.default_sort_by
  assign sort_options = collection.sort_options
  assign current_filter_size = 0

  for filter in filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor

  case per_row
    when 1
      assign grid_item_width = ''
    when 2
      assign grid_item_width = 'medium-up--one-half'
    when 3
      assign grid_item_width = 'small--one-half medium-up--one-third'
    when 4
      assign grid_item_width = 'small--one-half medium-up--one-quarter'
    when 5
      assign grid_item_width = 'small--one-half medium-up--one-fifth'
    when 6
      assign grid_item_width = 'small--one-half medium-up--one-sixth'
  endcase
%}

<div class="collection-grid__wrapper">
  <div class="collection-filter {% if enable_filter_sticky_d and enable_filter_tree_button_desktop_v %} boost-pfs-filter-tree-desktop-button-sticky-wrapper {% endif %} {% if enable_filter_sticky_m %}boost-pfs-filter-tree-mobile-button-stick-wrapper {% endif %}">
    <div class="collection-filter__item collection-filter__item--drawer">
      <div class="button boost-pfs-filter-tree-mobile-button">
        {% render 'boost-pfs-filter-skeleton', type: 'button' %}
      </div>
    </div>

    <div class="collection-filter__item collection-filter__item--count small--hide">
      {%- if enable_filter_tree_button_desktop_v  -%}
        <div class="boost-pfs-filter-tree-desktop-button">{%- render 'boost-pfs-filter-skeleton', type: 'button' -%}</div>
      {%- endif -%}

      <div class="boost-pfs-filter-total-product">
      {%- if enable_collection_count -%}
        {{ count_label | t: count: count }}
      {%- endif -%}
      </div>

    </div>

    {%- if enable_sort -%}
      <div class="collection-filter__item collection-filter__item--sort boost-pfs-filter-top-sorting">
        {% render 'boost-pfs-filter-skeleton', width: 3 %}
      </div>
    {%- endif -%}
  </div>
  <div class="boost-pfs-filter-tree boost-pfs-filter-tree-v" data-is-mobile></div>

  <div class="boost-pfs-filter-products grid grid--uniform{% if mobile_flush_grid %} small--grid--flush{% endif %}" data-boost-sort="{{ collection.default_sort_by }}" {% unless enable_collection_count %} data-scroll-to{% endunless %}>
    {%- for item in items -%}
      {%- if item.object_type == 'product' -%}
        {%- render 'product-grid-item',
          product: item,
          per_row: per_row,
          quick_shop_enable: quick_shop_enable
        -%}
      {%- else -%}
        {%- render 'search-grid-item',
          item: item,
          per_row: per_row
        %}
      {%- endif -%}
    {%- endfor -%}
  </div>
  
</div>

{%- if enable_sidebar and filter_style != 'drawer' -%}
{% comment %}
  Sidebar enabled but not in drawer mode, only show filter button on mobile
{% endcomment %}
{% style %}
@media screen and (min-width: 769px) {
  .collection-filter__item--drawer {
    display: none;
  }
  .collection-filter__item--count {
    text-align: left;
  }
  html[dir="rtl"] .collection-filter__item--count {
    text-align: right;
  }
}
{% endstyle %}
{%- endif -%}

{%- unless enable_sidebar -%}
{% comment %}
    Disable sidebar & filter features
{% endcomment %}
{% style %}
.collection-filter__item--drawer {
  display: none;
}
.collection-filter__item--count {
  text-align: left;
}
html[dir="rtl"] .collection-filter__item--count {
  text-align: right;
}
{% endstyle %}
{%- endunless -%}

{%- unless enable_sort -%}
{% style %}
.collection-filter__sort-container {
  display: none;
}
{% endstyle %}
{%- endunless -%}
